<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.1</TargetFramework>
		<Nullable>enable</Nullable>
		<Title>Mythosia.Azure.AI</Title>
		<Authors>JJW</Authors>
		<Company>Mythosia</Company>
		<Description>Mythosia.Azure.AI - AssistantAI Client Library
Mythosia.Azure.AI provides an easy-to-use client library for interacting with Azure OpenAI Assistants. This library integrates the power of Azure's AI services, allowing you to create and manage assistant threads, send user inputs, and retrieve assistant-generated responses in an asynchronous manner. It also includes support for managing sensitive credentials using Azure Key Vault.

Features:
Assistant Management: Easily create and manage Azure OpenAI Assistants and conversation threads.
Message Handling: Send user input to the assistant, run conversations asynchronously, and retrieve the assistant’s responses.
Azure Key Vault Integration: Safely manage your endpoint and key secrets using Azure Key Vault with SecretFetcher.
Lazy Initialization: Efficient resource management with lazy initialization for both assistant and thread objects.
Custom Search Index Integration: The SearchIndexClient enables advanced integration with Azure Search if needed.
Key Classes:
AssistantAI: Core class for interacting with Azure OpenAI Assistants. You can initialize the assistant using either Key Vault secrets or connection strings.
SecretFetcher: Utility class for retrieving sensitive information such as API keys and connection strings from Azure Key Vault.

Example Usage:
// Using Key Vault secrets to initialize the AssistantAI
var assistantAI = new AssistantAI(endpointSecretFetcher, keySecretFetcher, assistantOptions);

// Using direct connection string and key to initialize the AssistantAI
var assistantAI = new AssistantAI("https://my-endpoint", "my-api-key", assistantOptions);

// Run a conversation with the assistant
string response = await assistantAI.RunAsync("Hello, how can you assist me?");
Console.WriteLine(response);

// Start a new thread and run a conversation
string newThreadResponse = await assistantAI.RunOnNewThreadAsync("Start a new session");
Console.WriteLine(newThreadResponse);</Description>
	</PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Azure.AI.OpenAI" Version="2.0.0-beta.4" />
    <PackageReference Include="Azure.AI.OpenAI.Assistants" Version="1.0.0-beta.4" />
    <PackageReference Include="Azure.Core" Version="1.42.0" />
    <PackageReference Include="Azure.Search.Documents" Version="11.6.0" />
    <PackageReference Include="Mythosia.Azure" Version="1.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Mythosia.Azure\Mythosia.Azure.csproj" />
  </ItemGroup>

</Project>
